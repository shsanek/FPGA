$date
	Sun Mar 23 22:36:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module NAND_tb $end
$var wire 1 ! y $end
$var reg 1 " a $end
$var reg 1 # b $end
$var integer 32 $ error [31:0] $end
$scope module dut $end
$var wire 1 " a $end
$var wire 1 # b $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$scope module REG_tb $end
$var wire 8 % current_value [7:0] $end
$var reg 1 & clk $end
$var reg 1 ' reset_trigger $end
$var reg 8 ( value [7:0] $end
$var reg 1 ) write_trigger $end
$var integer 32 * error [31:0] $end
$scope module dut $end
$var wire 1 & clk $end
$var wire 8 + current_value [7:0] $end
$var wire 1 ' reset_trigger $end
$var wire 8 , value [7:0] $end
$var wire 1 ) write_trigger $end
$var reg 8 - current_value_internal [7:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 . i [31:0] $end
$upscope $end
$upscope $end
$scope module bf_command_runner_tb $end
$var wire 1 / write_trigger $end
$var wire 8 0 new_value [7:0] $end
$var wire 16 1 command_addr [15:0] $end
$var wire 16 2 cell_addr [15:0] $end
$var reg 1 3 clk $end
$var reg 3 4 current_command [2:0] $end
$var reg 8 5 current_value [7:0] $end
$var reg 1 6 run_trigger $end
$var integer 32 7 error [31:0] $end
$scope module dut $end
$var wire 16 8 cell_addr [15:0] $end
$var wire 1 3 clk $end
$var wire 16 9 command_addr [15:0] $end
$var wire 3 : current_command [2:0] $end
$var wire 8 ; current_value [7:0] $end
$var wire 8 < new_value [7:0] $end
$var wire 1 6 run_trigger $end
$var wire 1 / write_trigger $end
$var reg 16 = cell_addr_internal [15:0] $end
$var reg 16 > command_addr_internal [15:0] $end
$var reg 8 ? new_value_internal [7:0] $end
$var reg 8 @ stack [7:0] $end
$var reg 2 A state [1:0] $end
$var reg 1 B write_trigger_internal $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
06
b0 5
b0 4
03
b0 2
b0 1
b0 0
0/
b0 .
bx -
b100 ,
bx +
b0 *
1)
b100 (
0'
0&
bx %
b0 $
0#
0"
1!
$end
#5
b100 %
b100 +
b100 -
13
b1 .
1&
#10
03
b10 .
0&
b1010 5
b1010 ;
16
b110 (
b110 ,
0)
1#
#15
1/
1B
b1011 0
b1011 <
b1011 ?
b1 1
b1 9
b1 >
13
b11 .
1&
#20
b0 %
b0 +
b0 -
03
b100 .
0&
b10100 5
b10100 ;
b1 4
b1 :
b100 (
b100 ,
1'
0#
1"
#25
b10011 0
b10011 <
b10011 ?
b10 1
b10 9
b10 >
1/
1B
13
b101 .
1&
#30
0!
03
b110 .
0&
b0 5
b0 ;
b10 4
b10 :
1)
0'
1#
#35
b100 %
b100 +
b100 -
b1 A
b11 1
b11 9
b11 >
0/
0B
13
b111 .
1&
#40
03
b1000 .
0&
b101 5
b101 ;
b11 4
b11 :
#45
b0 A
b100 1
b100 9
b100 >
13
b1001 .
1&
#50
03
b1010 .
0&
b100 4
b100 :
#55
b1 2
b1 8
b1 =
b101 1
b101 9
b101 >
13
b1011 .
1&
#60
03
b1100 .
0&
b101 4
b101 :
#65
b0 2
b0 8
b0 =
b110 1
b110 9
b110 >
13
b1101 .
1&
#70
03
b1110 .
0&
